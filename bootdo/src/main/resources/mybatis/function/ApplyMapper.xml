<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.bootdo.function.dao.ApplyDao">

	<select id="get" resultType="com.bootdo.function.domain.ApplyDO">
		select `apply_id`,`apply_name`,`apply_content`,`user_id`,`username`,`dept_id`,`email`,`mobile`,`gmt_create`,`gmt_modified` from function_apply where apply_id = #{value}
	</select>

	<select id="list" resultType="com.bootdo.function.domain.ApplyDO">
		select `apply_id`,`apply_name`,`apply_content`,`user_id`,`username`,`dept_id`,`email`,`mobile`,`gmt_create`,`gmt_modified` from function_apply
        <where>  
		  		  <if test="applyId != null and applyId != ''"> and apply_id = #{applyId} </if>
		  		  <if test="applyName != null and applyName != ''"> and apply_name = #{applyName} </if>
		  		  <if test="applyContent != null and applyContent != ''"> and apply_content = #{applyContent} </if>
		  		  <if test="userId != null and userId != ''"> and user_id = #{userId} </if>
		  		  <if test="username != null and username != ''"> and username = #{username} </if>
		  		  <if test="deptId != null and deptId != ''"> and dept_id = #{deptId} </if>
		  		  <if test="email != null and email != ''"> and email = #{email} </if>
		  		  <if test="mobile != null and mobile != ''"> and mobile = #{mobile} </if>
		  		  <if test="gmtCreate != null and gmtCreate != ''"> and gmt_create = #{gmtCreate} </if>
		  		  <if test="gmtModified != null and gmtModified != ''"> and gmt_modified = #{gmtModified} </if>
		  		</where>
        <choose>
            <when test="sort != null and sort.trim() != ''">
                order by ${sort} ${order}
            </when>
			<otherwise>
                order by apply_id desc
			</otherwise>
        </choose>
		<if test="offset != null and limit != null">
			limit #{offset}, #{limit}
		</if>
	</select>
	
 	<select id="count" resultType="int">
		select count(*) from function_apply
		 <where>  
		  		  <if test="applyId != null and applyId != ''"> and apply_id = #{applyId} </if>
		  		  <if test="applyName != null and applyName != ''"> and apply_name = #{applyName} </if>
		  		  <if test="applyContent != null and applyContent != ''"> and apply_content = #{applyContent} </if>
		  		  <if test="userId != null and userId != ''"> and user_id = #{userId} </if>
		  		  <if test="username != null and username != ''"> and username = #{username} </if>
		  		  <if test="deptId != null and deptId != ''"> and dept_id = #{deptId} </if>
		  		  <if test="email != null and email != ''"> and email = #{email} </if>
		  		  <if test="mobile != null and mobile != ''"> and mobile = #{mobile} </if>
		  		  <if test="gmtCreate != null and gmtCreate != ''"> and gmt_create = #{gmtCreate} </if>
		  		  <if test="gmtModified != null and gmtModified != ''"> and gmt_modified = #{gmtModified} </if>
		  		</where>
	</select>
	 
	<insert id="save" parameterType="com.bootdo.function.domain.ApplyDO" useGeneratedKeys="true" keyProperty="applyId">
		insert into function_apply
		(
			`apply_name`, 
			`apply_content`, 
			`user_id`, 
			`username`, 
			`dept_id`, 
			`email`, 
			`mobile`, 
			`gmt_create`, 
			`gmt_modified`
		)
		values
		(
			#{applyName}, 
			#{applyContent}, 
			#{userId}, 
			#{username}, 
			#{deptId}, 
			#{email}, 
			#{mobile}, 
			#{gmtCreate}, 
			#{gmtModified}
		)
	</insert>
	 
	<update id="update" parameterType="com.bootdo.function.domain.ApplyDO">
		update function_apply 
		<set>
			<if test="applyName != null">`apply_name` = #{applyName}, </if>
			<if test="applyContent != null">`apply_content` = #{applyContent}, </if>
			<if test="userId != null">`user_id` = #{userId}, </if>
			<if test="username != null">`username` = #{username}, </if>
			<if test="deptId != null">`dept_id` = #{deptId}, </if>
			<if test="email != null">`email` = #{email}, </if>
			<if test="mobile != null">`mobile` = #{mobile}, </if>
			<if test="gmtCreate != null">`gmt_create` = #{gmtCreate}, </if>
			<if test="gmtModified != null">`gmt_modified` = #{gmtModified}</if>
		</set>
		where apply_id = #{applyId}
	</update>
	
	<delete id="remove">
		delete from function_apply where apply_id = #{value}
	</delete>
	
	<delete id="batchRemove">
		delete from function_apply where apply_id in 
		<foreach item="applyId" collection="array" open="(" separator="," close=")">
			#{applyId}
		</foreach>
	</delete>

</mapper>